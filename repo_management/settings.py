"""
Django settings for repo_management project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-%+g0=+rx+&-nbl@v+-+)=sze(06*b@ks+2f4am7)421ul+g6s6"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "jazzmin",
    "django_browser_reload",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "repository",
    "ckeditor",
    'ckeditor_uploader',  # Add this if you plan to use the file uploader
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'repository.middleware.session_timeout_middleware.SessionIdleTimeout', # Add this line
]

ROOT_URLCONF = "repo_management.urls"
#email config
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = 'sandbox.smtp.mailtrap.io'
EMAIL_HOST_USER = 'f37a60742a472f'
EMAIL_HOST_PASSWORD = '59a7a6b4496b81'
EMAIL_PORT = '2525'

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "repo_management.wsgi.application"
# Ensure sessions are stored in the database (default)
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# Set a reasonable session expiration time (e.g., 2 weeks)
SESSION_COOKIE_AGE = 1209600  # 2 weeks, in seconds

# Ensure that the session cookie is not cleared when the browser closes
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# Optionally, set the session to expire only if the user is inactive
SESSION_SAVE_EVERY_REQUEST = True

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',  # Use MySQL backend
#         'NAME': 'repo',          # Replace with your database name
#         'USER': 'root',          # Replace with your MySQL username
#         'PASSWORD': '',  # Replace with your MySQL password
#         'HOST': 'localhost',                   # Set to your MySQL server address
#         'PORT': '3306',                        # Default MySQL port
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


LOGIN_URL='repo/Myhome'
LOGIN_REDIRECT_URL='repo/dasboard'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'repository', 'static'),
]

STATIC_URL = "static/"
CKEDITOR_UPLOAD_PATH = "static/medias/"
# settings.py

# Set session to expire after 20 minutes of inactivity
SESSION_COOKIE_AGE = 20 * 60  # 20 minutes in seconds
SESSION_SAVE_EVERY_REQUEST = True  # Save the session to keep it active on every request

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 400,
        'width': '100%',
        # You can add more configurations here as per CKEditor documentation
    },
}

# MEDIA_URL = "/profile/"
# MEDIA_ROOT = os.path.join(BASE_DIR, 'profile')
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
# settings.py

from datetime import timedelta

INACTIVITY_TIMEOUT = timedelta(minutes=10)   # Example value in seconds


# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')